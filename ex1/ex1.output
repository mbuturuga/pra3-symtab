Gramática

    0 $accept: program $end

    1 program: sentence_list
    2        | ε

    3 sentence_list: sentence
    4              | sentence_list sentence

    5 sentence: EOL
    6         | aux_scope formula EOL aux_end_scope
    7         | error EOL aux_end_all_scopes

    8 aux_scope: ε

    9 aux_end_scope: ε

   10 aux_end_all_scopes: ε

   11 formula: atomic_formula
   12        | composite_formula

   13 composite_formula: FORALL aux_scope VAR aux_var formula aux_end_scope
   14                  | EXISTS aux_scope VAR aux_var formula aux_end_scope
   15                  | NOT formula
   16                  | formula AND formula
   17                  | formula OR formula
   18                  | formula IMPLIES formula
   19                  | formula IFF formula
   20                  | '(' formula ')'

   21 aux_var: ε

   22 atomic_formula: PRED '(' term_list ')'

   23 term_list: term
   24          | term_list ',' term

   25 term: VAR
   26     | CONST
   27     | FUNC '(' term_list ')'


Terminales con las reglas donde aparecen

    $end (0) 0
    '(' (40) 20 22 27
    ')' (41) 20 22 27
    ',' (44) 24
    error (256) 7
    VAR <name> (258) 13 14 25
    CONST <name> (259) 26
    PRED <name> (260) 22
    FUNC <name> (261) 27
    FORALL (262) 13
    EXISTS (263) 14
    AND (264) 16
    OR (265) 17
    NOT (266) 15
    IMPLIES (267) 18
    IFF (268) 19
    EOL (269) 5 6 7


No terminales con las reglas donde aparecen

    $accept (18)
        on left: 0
    program <notype> (19)
        on left: 1 2
        on right: 0
    sentence_list <notype> (20)
        on left: 3 4
        on right: 1 4
    sentence <notype> (21)
        on left: 5 6 7
        on right: 3 4
    aux_scope (22)
        on left: 8
        on right: 6 13 14
    aux_end_scope (23)
        on left: 9
        on right: 6 13 14
    aux_end_all_scopes (24)
        on left: 10
        on right: 7
    formula <string> (25)
        on left: 11 12
        on right: 6 13 14 15 16 17 18 19 20
    composite_formula <string> (26)
        on left: 13 14 15 16 17 18 19 20
        on right: 12
    aux_var (27)
        on left: 21
        on right: 13 14
    atomic_formula <string> (28)
        on left: 22
        on right: 11
    term_list <string> (29)
        on left: 23 24
        on right: 22 24 27
    term <string> (30)
        on left: 25 26 27
        on right: 23 24


Estado 0

    0 $accept: • program $end

    error  desplazar e ir al estado 1
    EOL    desplazar e ir al estado 2

    $end    reduce usando la regla 2 (program)
    PRED    reduce usando la regla 8 (aux_scope)
    FORALL  reduce usando la regla 8 (aux_scope)
    EXISTS  reduce usando la regla 8 (aux_scope)
    NOT     reduce usando la regla 8 (aux_scope)
    '('     reduce usando la regla 8 (aux_scope)

    program        ir al estado 3
    sentence_list  ir al estado 4
    sentence       ir al estado 5
    aux_scope      ir al estado 6


Estado 1

    7 sentence: error • EOL aux_end_all_scopes

    EOL  desplazar e ir al estado 7


Estado 2

    5 sentence: EOL •

    $default  reduce usando la regla 5 (sentence)


Estado 3

    0 $accept: program • $end

    $end  desplazar e ir al estado 8


Estado 4

    1 program: sentence_list •
    4 sentence_list: sentence_list • sentence

    error  desplazar e ir al estado 1
    EOL    desplazar e ir al estado 2

    $end    reduce usando la regla 1 (program)
    PRED    reduce usando la regla 8 (aux_scope)
    FORALL  reduce usando la regla 8 (aux_scope)
    EXISTS  reduce usando la regla 8 (aux_scope)
    NOT     reduce usando la regla 8 (aux_scope)
    '('     reduce usando la regla 8 (aux_scope)

    sentence   ir al estado 9
    aux_scope  ir al estado 6


Estado 5

    3 sentence_list: sentence •

    $default  reduce usando la regla 3 (sentence_list)


Estado 6

    6 sentence: aux_scope • formula EOL aux_end_scope

    PRED    desplazar e ir al estado 10
    FORALL  desplazar e ir al estado 11
    EXISTS  desplazar e ir al estado 12
    NOT     desplazar e ir al estado 13
    '('     desplazar e ir al estado 14

    formula            ir al estado 15
    composite_formula  ir al estado 16
    atomic_formula     ir al estado 17


Estado 7

    7 sentence: error EOL • aux_end_all_scopes

    $default  reduce usando la regla 10 (aux_end_all_scopes)

    aux_end_all_scopes  ir al estado 18


Estado 8

    0 $accept: program $end •

    $default  aceptar


Estado 9

    4 sentence_list: sentence_list sentence •

    $default  reduce usando la regla 4 (sentence_list)


Estado 10

   22 atomic_formula: PRED • '(' term_list ')'

    '('  desplazar e ir al estado 19


Estado 11

   13 composite_formula: FORALL • aux_scope VAR aux_var formula aux_end_scope

    $default  reduce usando la regla 8 (aux_scope)

    aux_scope  ir al estado 20


Estado 12

   14 composite_formula: EXISTS • aux_scope VAR aux_var formula aux_end_scope

    $default  reduce usando la regla 8 (aux_scope)

    aux_scope  ir al estado 21


Estado 13

   15 composite_formula: NOT • formula

    PRED    desplazar e ir al estado 10
    FORALL  desplazar e ir al estado 11
    EXISTS  desplazar e ir al estado 12
    NOT     desplazar e ir al estado 13
    '('     desplazar e ir al estado 14

    formula            ir al estado 22
    composite_formula  ir al estado 16
    atomic_formula     ir al estado 17


Estado 14

   20 composite_formula: '(' • formula ')'

    PRED    desplazar e ir al estado 10
    FORALL  desplazar e ir al estado 11
    EXISTS  desplazar e ir al estado 12
    NOT     desplazar e ir al estado 13
    '('     desplazar e ir al estado 14

    formula            ir al estado 23
    composite_formula  ir al estado 16
    atomic_formula     ir al estado 17


Estado 15

    6 sentence: aux_scope formula • EOL aux_end_scope
   16 composite_formula: formula • AND formula
   17                  | formula • OR formula
   18                  | formula • IMPLIES formula
   19                  | formula • IFF formula

    AND      desplazar e ir al estado 24
    OR       desplazar e ir al estado 25
    IMPLIES  desplazar e ir al estado 26
    IFF      desplazar e ir al estado 27
    EOL      desplazar e ir al estado 28


Estado 16

   12 formula: composite_formula •

    $default  reduce usando la regla 12 (formula)


Estado 17

   11 formula: atomic_formula •

    $default  reduce usando la regla 11 (formula)


Estado 18

    7 sentence: error EOL aux_end_all_scopes •

    $default  reduce usando la regla 7 (sentence)


Estado 19

   22 atomic_formula: PRED '(' • term_list ')'

    VAR    desplazar e ir al estado 29
    CONST  desplazar e ir al estado 30
    FUNC   desplazar e ir al estado 31

    term_list  ir al estado 32
    term       ir al estado 33


Estado 20

   13 composite_formula: FORALL aux_scope • VAR aux_var formula aux_end_scope

    VAR  desplazar e ir al estado 34


Estado 21

   14 composite_formula: EXISTS aux_scope • VAR aux_var formula aux_end_scope

    VAR  desplazar e ir al estado 35


Estado 22

   15 composite_formula: NOT formula •
   16                  | formula • AND formula
   17                  | formula • OR formula
   18                  | formula • IMPLIES formula
   19                  | formula • IFF formula

    $default  reduce usando la regla 15 (composite_formula)


Estado 23

   16 composite_formula: formula • AND formula
   17                  | formula • OR formula
   18                  | formula • IMPLIES formula
   19                  | formula • IFF formula
   20                  | '(' formula • ')'

    AND      desplazar e ir al estado 24
    OR       desplazar e ir al estado 25
    IMPLIES  desplazar e ir al estado 26
    IFF      desplazar e ir al estado 27
    ')'      desplazar e ir al estado 36


Estado 24

   16 composite_formula: formula AND • formula

    PRED    desplazar e ir al estado 10
    FORALL  desplazar e ir al estado 11
    EXISTS  desplazar e ir al estado 12
    NOT     desplazar e ir al estado 13
    '('     desplazar e ir al estado 14

    formula            ir al estado 37
    composite_formula  ir al estado 16
    atomic_formula     ir al estado 17


Estado 25

   17 composite_formula: formula OR • formula

    PRED    desplazar e ir al estado 10
    FORALL  desplazar e ir al estado 11
    EXISTS  desplazar e ir al estado 12
    NOT     desplazar e ir al estado 13
    '('     desplazar e ir al estado 14

    formula            ir al estado 38
    composite_formula  ir al estado 16
    atomic_formula     ir al estado 17


Estado 26

   18 composite_formula: formula IMPLIES • formula

    PRED    desplazar e ir al estado 10
    FORALL  desplazar e ir al estado 11
    EXISTS  desplazar e ir al estado 12
    NOT     desplazar e ir al estado 13
    '('     desplazar e ir al estado 14

    formula            ir al estado 39
    composite_formula  ir al estado 16
    atomic_formula     ir al estado 17


Estado 27

   19 composite_formula: formula IFF • formula

    PRED    desplazar e ir al estado 10
    FORALL  desplazar e ir al estado 11
    EXISTS  desplazar e ir al estado 12
    NOT     desplazar e ir al estado 13
    '('     desplazar e ir al estado 14

    formula            ir al estado 40
    composite_formula  ir al estado 16
    atomic_formula     ir al estado 17


Estado 28

    6 sentence: aux_scope formula EOL • aux_end_scope

    $default  reduce usando la regla 9 (aux_end_scope)

    aux_end_scope  ir al estado 41


Estado 29

   25 term: VAR •

    $default  reduce usando la regla 25 (term)


Estado 30

   26 term: CONST •

    $default  reduce usando la regla 26 (term)


Estado 31

   27 term: FUNC • '(' term_list ')'

    '('  desplazar e ir al estado 42


Estado 32

   22 atomic_formula: PRED '(' term_list • ')'
   24 term_list: term_list • ',' term

    ')'  desplazar e ir al estado 43
    ','  desplazar e ir al estado 44


Estado 33

   23 term_list: term •

    $default  reduce usando la regla 23 (term_list)


Estado 34

   13 composite_formula: FORALL aux_scope VAR • aux_var formula aux_end_scope

    $default  reduce usando la regla 21 (aux_var)

    aux_var  ir al estado 45


Estado 35

   14 composite_formula: EXISTS aux_scope VAR • aux_var formula aux_end_scope

    $default  reduce usando la regla 21 (aux_var)

    aux_var  ir al estado 46


Estado 36

   20 composite_formula: '(' formula ')' •

    $default  reduce usando la regla 20 (composite_formula)


Estado 37

   16 composite_formula: formula • AND formula
   16                  | formula AND formula •
   17                  | formula • OR formula
   18                  | formula • IMPLIES formula
   19                  | formula • IFF formula

    $default  reduce usando la regla 16 (composite_formula)


Estado 38

   16 composite_formula: formula • AND formula
   17                  | formula • OR formula
   17                  | formula OR formula •
   18                  | formula • IMPLIES formula
   19                  | formula • IFF formula

    AND  desplazar e ir al estado 24

    $default  reduce usando la regla 17 (composite_formula)


Estado 39

   16 composite_formula: formula • AND formula
   17                  | formula • OR formula
   18                  | formula • IMPLIES formula
   18                  | formula IMPLIES formula •
   19                  | formula • IFF formula

    AND  desplazar e ir al estado 24
    OR   desplazar e ir al estado 25

    $default  reduce usando la regla 18 (composite_formula)


Estado 40

   16 composite_formula: formula • AND formula
   17                  | formula • OR formula
   18                  | formula • IMPLIES formula
   19                  | formula • IFF formula
   19                  | formula IFF formula •

    AND  desplazar e ir al estado 24
    OR   desplazar e ir al estado 25

    $default  reduce usando la regla 19 (composite_formula)


Estado 41

    6 sentence: aux_scope formula EOL aux_end_scope •

    $default  reduce usando la regla 6 (sentence)


Estado 42

   27 term: FUNC '(' • term_list ')'

    VAR    desplazar e ir al estado 29
    CONST  desplazar e ir al estado 30
    FUNC   desplazar e ir al estado 31

    term_list  ir al estado 47
    term       ir al estado 33


Estado 43

   22 atomic_formula: PRED '(' term_list ')' •

    $default  reduce usando la regla 22 (atomic_formula)


Estado 44

   24 term_list: term_list ',' • term

    VAR    desplazar e ir al estado 29
    CONST  desplazar e ir al estado 30
    FUNC   desplazar e ir al estado 31

    term  ir al estado 48


Estado 45

   13 composite_formula: FORALL aux_scope VAR aux_var • formula aux_end_scope

    PRED    desplazar e ir al estado 10
    FORALL  desplazar e ir al estado 11
    EXISTS  desplazar e ir al estado 12
    NOT     desplazar e ir al estado 13
    '('     desplazar e ir al estado 14

    formula            ir al estado 49
    composite_formula  ir al estado 16
    atomic_formula     ir al estado 17


Estado 46

   14 composite_formula: EXISTS aux_scope VAR aux_var • formula aux_end_scope

    PRED    desplazar e ir al estado 10
    FORALL  desplazar e ir al estado 11
    EXISTS  desplazar e ir al estado 12
    NOT     desplazar e ir al estado 13
    '('     desplazar e ir al estado 14

    formula            ir al estado 50
    composite_formula  ir al estado 16
    atomic_formula     ir al estado 17


Estado 47

   24 term_list: term_list • ',' term
   27 term: FUNC '(' term_list • ')'

    ')'  desplazar e ir al estado 51
    ','  desplazar e ir al estado 44


Estado 48

   24 term_list: term_list ',' term •

    $default  reduce usando la regla 24 (term_list)


Estado 49

   13 composite_formula: FORALL aux_scope VAR aux_var formula • aux_end_scope
   16                  | formula • AND formula
   17                  | formula • OR formula
   18                  | formula • IMPLIES formula
   19                  | formula • IFF formula

    $default  reduce usando la regla 9 (aux_end_scope)

    aux_end_scope  ir al estado 52


Estado 50

   14 composite_formula: EXISTS aux_scope VAR aux_var formula • aux_end_scope
   16                  | formula • AND formula
   17                  | formula • OR formula
   18                  | formula • IMPLIES formula
   19                  | formula • IFF formula

    $default  reduce usando la regla 9 (aux_end_scope)

    aux_end_scope  ir al estado 53


Estado 51

   27 term: FUNC '(' term_list ')' •

    $default  reduce usando la regla 27 (term)


Estado 52

   13 composite_formula: FORALL aux_scope VAR aux_var formula aux_end_scope •

    $default  reduce usando la regla 13 (composite_formula)


Estado 53

   14 composite_formula: EXISTS aux_scope VAR aux_var formula aux_end_scope •

    $default  reduce usando la regla 14 (composite_formula)
